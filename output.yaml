apiVersion: v1
data:
  AUTH_URL: https://employee.login.int.signal-iduna.org/
  ENABLE_JSON_LOGGING: "true"
  JAVA_OPTS: -javaagent:/splunk-otel-javaagent.jar -Dsplunk.profiler.enabled=true
    -Dsplunk.profiler.memory.enabled=true
  KAFKA_BOOTSTRAP_SERVER: bootstrap-nop.kafka.svc.cluster.local:9443
  KAFKA_BROKERS: si-cluster-kafka-brokers.kafka-cluster-tst.svc.cluster.local:9093
  KAFKA_OAUTH_TOKEN_ENDPOINT_URL: http://idp-nop.kafka.svc.cluster.local:9443/token
  LOG_LEVEL: INFO
  LOG_LEVEL_SI: DEBUG
  LOGBACK_FILE: logback-json.xml
  POSTGRES_DB_NAME: elpapgt
  POSTGRES_HOST: vipsiae11a.system.local
  POSTGRES_SCHEMA: hint
  POSTGRES_SHOW_SQL: "false"
  POSTGRES_SSL_MODE: prefer
  POSTGRES_USER: ZA-SVC-ELPAG-T
  SERVICE_NAME: hint
kind: ConfigMap
metadata:
  labels:
    app: hint
    service: hint-service
  name: dev-backend-cm-hint
  namespace: elpa4
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /metrics/prometheus
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"
  labels:
    app: hint
    name: metrics
    service: hint-service
  name: dev-metrics-hint
  namespace: elpa4
spec:
  ports:
  - name: http
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app: hint-metrics
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: hint
    service: hint-service
  name: dev-service-hint
  namespace: elpa4
spec:
  ports:
  - appProtocol: http
    name: http
    port: 8080
    targetPort: 8080
  selector:
    app: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hint
    environment: dev
    service: hint-service
  name: dev-app-hint
  namespace: elpa4
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: hint
  template:
    metadata:
      labels:
        app: hint
        service: hint
    spec:
      containers:
      - env:
        - name: POSTGRES_SCHEMA
          valueFrom:
            fieldRef:
              fieldPath: K8S_ENVIRONMENT_LABEL
        - name: FLYWAY_ENABLED
          value: "true"
        - name: FLYWAY_LOCATIONS
          value: db/migration
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PASSWORD
              name: postgresuser-secret
        - name: KAFKA_CLIENT_ID
          value: $(SERVICE_NAME)-$(K8S_POD_NAME)
        - name: KAFKA_CONSUMER_GROUP
          value: $(SERVICE_NAME)-$(K8S_ENVIRONMENT_LABEL)
        - name: KAFKA_OAUTH_CLIENT_ID
          value: workload-client
        - name: KAFKA_OAUTH_CLIENT_SECRET
          value: workload-secret
        - name: KAFKA_SASL_MECHANISM
          value: OAUTHBEARER
        - name: KAFKA_SECURITY_PROTOCOL
          value: SASL_PLAINTEXT
        - name: KAFKA_TOPIC_SUFFIX
          value: -$(K8S_ENVIRONMENT_LABEL)
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app']
        - name: K8S_NAMESPACE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: K8S_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: K8S_ENVIRONMENT_LABEL
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['environment']
        envFrom:
        - configMapRef:
            name: dev-backend-cm-hint
        image: docker-registry.default.svc:5000/elpa-hint-abn/hint:33909f4.1440
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check?type=ALIVE
            port: http
          initialDelaySeconds: 180
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 2
        name: app
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check?type=READY
            port: http
          initialDelaySeconds: 180
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: identity
